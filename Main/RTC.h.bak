#ifndef RTC_H
#define RTC_H


//*****************************************************************************
// INCLUDE FILES
//*****************************************************************************
#include "GenericTypeDefs.h"
#include "Main.h"

//*****************************************************************************
// MACROS
//*****************************************************************************

#ifdef	RTC_IMPORTED
#define RTC_TYPE
#else
#define RTC_TYPE extern
#endif

#define RTC_ALARM_INTERRUPT_FLAG 		PIR3bits.RTCIF
//#define RTC_ALARM_INTERRUPT_ENABLE		PIE3bits.RTCIP
//#define RTC_ALARM_INTERRUPT_PRIORITY	IPR3bits.RTCIE	


//*****************************************************************************
// VARIABLES

typedef struct
{
	BYTE	yHalfSecond;
	
	BYTE	yRedLED;
	
	BYTE	yGreenLED;
	
	BYTE	yBatterySample;

	BYTE	yChargingLEDOff;
	
}RTC_SYSTEM_TIMER;

typedef union
{
	struct
	{
		BYTE	yMinuateFlag:1;
		
		BYTE	yRedLEDFlag:1;
		
		BYTE	yGreenLEDFlag:1;
		
		BYTE	yBatterySampleFlag:1;

		BYTE	yChargingLEDOffFlag:1;
		
			//Reserved 10		
	};
	WORD wFlags;
	
}RTC_TIMER_FLAG;

RTC_TYPE RTC_SYSTEM_TIMER	g_RTC_SystemTimer;
RTC_TYPE RTC_TIMER_FLAG		g_RTC_TimerFlag;
RTC_TYPE DWORD				g_RTC_SystemUptime;
RTC_TYPE BYTE				g_RTC_HalfSecond;

//*****************************************************************************
// FUNCTION DEFINITION
//*****************************************************************************
/********************************************************************
 * Function:		ADC_Initialize()
 *
 * PreCondition:	None
 *
 * Input:			None
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		Initialize the ADC module. It will setup the analog to digital
 *				convert module for battery and temperature sensor.
 *				  
 * Note:			None
 *******************************************************************/
void RTC_Initialize(void);
/********************************************************************
 * Function:		RTC_TimerHandler()
 *
 * PreCondition:	None
 *
 * Input:			None
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		The timer will time out every 1/2 second. Decrease the value
 *				in the RTC timer. When the value is to 0, it will set the flag
 *				and check the flag after exiting the interrupt.
 *
 * Note:			None
 *******************************************************************/
void RTC_TimerHandler(void);
/********************************************************************
 * Function:		RTC_TimeOutHandler()
 *
 * PreCondition:	None
 *
 * Input:			None
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		Handle the time out flag.
 *
 * Note:			None
 *******************************************************************/
void RTC_TimeOutHandler(void);
/********************************************************************
 * Function:		RTCif_SetHalfSecondTimeout()
 *
 * PreCondition:	None
 *
 * Input:			None
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		Set the flag to indicate that the half second timeout. It will
 *				check the timer in the normal process loop.
 *
 * Note:			None
 *******************************************************************/
void RTCif_SetHalfSecondTimeout(void);
/********************************************************************
 * Function:		RTCif_SetLEDTimer()
 *
 * PreCondition:	None
 *
 * Input:			WORD wLED: The LED
 *				BYTE wTime: The timer value
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		Set the RTC timer for LED highlighting.
 *
 * Note:			None
 *******************************************************************/
void RTCif_SetLEDTimer(
	WORD wLED,
	BYTE yTime
);
/********************************************************************
 * Function:		RTCif_SetBatterySampleTime()
 *
 * PreCondition:	None
 *
 * Input:			BYTE yTime: The sample waiting time
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		Set the battery sample timer for battery.
 *
 * Note:			None
 *******************************************************************/
void RTCif_SetBatterySampleTime(BYTE yTime);/********************************************************************
 * Function:		RTCif_SetBatterySampleTime()
 *
 * PreCondition:	None
 *
 * Input:			BYTE yTime: The sample waiting time
 *
 * Output:		None
 *
 * Side Effects:	None
 *
 * Overview:		Set the battery sample timer for battery.
 *
 * Note:			None
 *******************************************************************/
void RTCif_SetChargingLEDOffTime(BYTE yTime);

#endif